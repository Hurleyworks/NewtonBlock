// This header file was auto-generated by ClassMate++
// Created: 26 Jul 2013 4:13:15 pm
// Copyright (c) 2013, HurleyWorks
#pragma  once

#include "../../../NewtonAPI.h"

typedef void(*PrePhysicsCallback)(void * const userData, float timeStep);
typedef void(*PostPhysicsCallback)(void * const userData, float timeStep);

class PhysicsScene;

class ListenerBase
{

 public:
	ListenerBase (PhysicsScene * const scene, const char * const listenerName);
	virtual ~ListenerBase() = default;
	
	virtual void postUpdate (const NewtonWorld * const world, dFloat timeStep) = 0;
	virtual void preUpdate (const NewtonWorld * const world, dFloat timeStep) = 0;

 private:
	static void destroy (const NewtonWorld * const world,
                         void * const listenerUserData);

	static void postUpdate (const NewtonWorld * const world,
                            void * const listenerUserData, 
                            dFloat timeStep);

	static void preUpdate (const NewtonWorld * const world,
                           void * const listenerUserData, 
                           dFloat timeStep);
}; // end class ListenerBase

typedef std::shared_ptr<class AppListener> AppListenerRef;

class AppListener : public ListenerBase
{

 public:
	AppListener (PhysicsScene * const scene);
	~AppListener() = default;
	
	void setPostPhysicsCallback (PostPhysicsCallback callback) { postPhysicsCallback_ = callback; }
	void setPrePhysicsCallback (PrePhysicsCallback callback) { prePhysicsCallback_ = callback; }
		
 private:
	PhysicsScene * scene_;
	PostPhysicsCallback postPhysicsCallback_;
	PrePhysicsCallback prePhysicsCallback_;

	void postUpdate (const NewtonWorld * const world, dFloat timeStep) override;
	void preUpdate(const NewtonWorld * const world, dFloat timeStep) override;
		
}; // end class AppListener
