// This source file was auto-generated by ClassMate++
// Created: 26 Apr 2015 8:25:05 am
// Copyright (c) 2015, HurleyWorks

#include "SpaceTime.h"

using namespace ci;

// ctor
SpaceTime::SpaceTime ()
{	
	reset();
}

void SpaceTime::reset()
{
	birth = std::chrono::system_clock::now();

	startTransform = mat4(); // identity matrix
	localTransform = mat4();
	worldTransform = mat4();

	scale = vec3(1.0f);
	modelBound = AxisAlignedBox(); // default AABB has 0 extents
	worldBound = AxisAlignedBox();

	speed = 0.0f;
	direction = vec3(0.0f);
}

void SpaceTime::updateWorldBounds()
{
	vec3 min = vec3(worldTransform * vec4(modelBound.getMin(), 1));
	vec3 max = vec3(worldTransform * vec4(modelBound.getMax(), 1));
	
	worldBound.set(min, max);
}

std::chrono::duration<double> SpaceTime::getLifeSpan()
{
	auto now = std::chrono::system_clock::now();
	return now - birth;
}
