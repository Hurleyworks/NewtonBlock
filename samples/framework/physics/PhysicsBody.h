// This header file was auto-generated by ClassMate++
// Created: 5 Nov 2015 9:06:50 am
// Copyright (c) 2015, HurleyWorks

#pragma once

#include <memory>
#include <vector>
#include "cinder/gl/gl.h"
#include "SpaceTime.h"
#include "BodyDesc.h"
#include "BodyState.h"

typedef std::shared_ptr<class PhysicsBody> PhysicsBodyRef;
typedef std::vector<PhysicsBodyRef> PhysicsBodies;

typedef int64_t BodyID;
const int64_t INVALID_BODY_ID = -1;

class PhysicsBody
{
 
 public:
   static PhysicsBodyRef create() { return std::make_shared<PhysicsBody>(); }

 public:
	PhysicsBody() = default;
	~PhysicsBody() = default;

	PhysicsBody & operator=(const PhysicsBody&) = delete;
	PhysicsBody(const PhysicsBody&) = delete;

	BodyDesc desc;
	BodyState state;
	SpaceTime st;
	ci::TriMeshRef triMesh = nullptr;
	BodyID bodyID = INVALID_BODY_ID;
	void * userData = nullptr;  // don't delete!
	PhysicsBodyRef instancedFrom = nullptr;

}; // end class PhysicsBody


