// This header file was auto-generated by ClassMate++
// Created: 5 Nov 2015 6:10:39 pm
// Copyright (c) 2015, HurleyWorks

#pragma once

#include "Concurrent.h"
#include "../PhysicsBody.h"
#include "../PhysicsScene.h"

class ActiveDispatcher
{

 public:
	ActiveDispatcher() = default;
	~ActiveDispatcher() = default;
	
	// had to add a dummy return type here to work arond weird compiler bug
	// http://stackoverflow.com/questions/26733430/stdpackaged-task-bug-in-visual-studio

	int dispatchBody(PhysicsBodyRef & body, PhysicsSceneRef & scene, const EngineState engineState);
		/// This call might originate from multiple threads in a thread pool.
		/// You can add bodies to Newton on different threads but not concurrently,
		/// so we always add new bodies here using the same Concurrent worker thread
		/// Too bad Newton's allocator is not thread safe 
 
 private:
	

}; // end class ActiveDispatcher
