// This source file was auto-generated by ClassMate++
// Created: 28 Oct 2015 7:00:35 pm
// Copyright (c) 2015, HurleyWorks

//#include "NanoUtil.h"
//#include "../nanovg/nanovg.h"


using namespace cinder;

Timer NanoUtil::timer;

std::vector<std::pair<int, std::string>> NanoUtil::loadImageDirectory (NVGcontext * ctx, const std::string & folder)
{
   std::vector<std::pair<int, std::string> > result;
   fs::path p (folder);
   if (!fs::is_directory (p))
      return std::vector<std::pair<int, std::string>>();
   for (fs::directory_iterator it (p); it != fs::directory_iterator(); ++it)
   {
      fs::path imgPath = it->path();
      if (imgPath.extension() == ".png")
      {
         int img = nvgCreateImage (ctx, imgPath.string().c_str(), 0);
         if (img == 0)
            continue;
         result.push_back (
            std::make_pair (img, imgPath.string().substr (0, imgPath.string().length() - 4)));
      }
   }
   return result;
}

